/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package x.lab8_avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Clickinfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9078482109045685803L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Clickinfo\",\"namespace\":\"x.lab8_avro\",\"fields\":[{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"session\",\"type\":\"string\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"string\"},{\"name\":\"cost\",\"type\":\"long\"},{\"name\":\"campaign\",\"type\":\"string\"},{\"name\":\"ip\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Clickinfo> ENCODER =
      new BinaryMessageEncoder<Clickinfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Clickinfo> DECODER =
      new BinaryMessageDecoder<Clickinfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Clickinfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Clickinfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Clickinfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Clickinfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Clickinfo from a ByteBuffer. */
  public static Clickinfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long timestamp;
  @Deprecated public java.lang.CharSequence session;
  @Deprecated public java.lang.CharSequence domain;
  @Deprecated public java.lang.CharSequence user;
  @Deprecated public long cost;
  @Deprecated public java.lang.CharSequence campaign;
  @Deprecated public java.lang.CharSequence ip;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Clickinfo() {}

  /**
   * All-args constructor.
   * @param timestamp The new value for timestamp
   * @param session The new value for session
   * @param domain The new value for domain
   * @param user The new value for user
   * @param cost The new value for cost
   * @param campaign The new value for campaign
   * @param ip The new value for ip
   */
  public Clickinfo(java.lang.Long timestamp, java.lang.CharSequence session, java.lang.CharSequence domain, java.lang.CharSequence user, java.lang.Long cost, java.lang.CharSequence campaign, java.lang.CharSequence ip) {
    this.timestamp = timestamp;
    this.session = session;
    this.domain = domain;
    this.user = user;
    this.cost = cost;
    this.campaign = campaign;
    this.ip = ip;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timestamp;
    case 1: return session;
    case 2: return domain;
    case 3: return user;
    case 4: return cost;
    case 5: return campaign;
    case 6: return ip;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timestamp = (java.lang.Long)value$; break;
    case 1: session = (java.lang.CharSequence)value$; break;
    case 2: domain = (java.lang.CharSequence)value$; break;
    case 3: user = (java.lang.CharSequence)value$; break;
    case 4: cost = (java.lang.Long)value$; break;
    case 5: campaign = (java.lang.CharSequence)value$; break;
    case 6: ip = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'session' field.
   * @return The value of the 'session' field.
   */
  public java.lang.CharSequence getSession() {
    return session;
  }

  /**
   * Sets the value of the 'session' field.
   * @param value the value to set.
   */
  public void setSession(java.lang.CharSequence value) {
    this.session = value;
  }

  /**
   * Gets the value of the 'domain' field.
   * @return The value of the 'domain' field.
   */
  public java.lang.CharSequence getDomain() {
    return domain;
  }

  /**
   * Sets the value of the 'domain' field.
   * @param value the value to set.
   */
  public void setDomain(java.lang.CharSequence value) {
    this.domain = value;
  }

  /**
   * Gets the value of the 'user' field.
   * @return The value of the 'user' field.
   */
  public java.lang.CharSequence getUser() {
    return user;
  }

  /**
   * Sets the value of the 'user' field.
   * @param value the value to set.
   */
  public void setUser(java.lang.CharSequence value) {
    this.user = value;
  }

  /**
   * Gets the value of the 'cost' field.
   * @return The value of the 'cost' field.
   */
  public java.lang.Long getCost() {
    return cost;
  }

  /**
   * Sets the value of the 'cost' field.
   * @param value the value to set.
   */
  public void setCost(java.lang.Long value) {
    this.cost = value;
  }

  /**
   * Gets the value of the 'campaign' field.
   * @return The value of the 'campaign' field.
   */
  public java.lang.CharSequence getCampaign() {
    return campaign;
  }

  /**
   * Sets the value of the 'campaign' field.
   * @param value the value to set.
   */
  public void setCampaign(java.lang.CharSequence value) {
    this.campaign = value;
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public java.lang.CharSequence getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(java.lang.CharSequence value) {
    this.ip = value;
  }

  /**
   * Creates a new Clickinfo RecordBuilder.
   * @return A new Clickinfo RecordBuilder
   */
  public static x.lab8_avro.Clickinfo.Builder newBuilder() {
    return new x.lab8_avro.Clickinfo.Builder();
  }

  /**
   * Creates a new Clickinfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Clickinfo RecordBuilder
   */
  public static x.lab8_avro.Clickinfo.Builder newBuilder(x.lab8_avro.Clickinfo.Builder other) {
    return new x.lab8_avro.Clickinfo.Builder(other);
  }

  /**
   * Creates a new Clickinfo RecordBuilder by copying an existing Clickinfo instance.
   * @param other The existing instance to copy.
   * @return A new Clickinfo RecordBuilder
   */
  public static x.lab8_avro.Clickinfo.Builder newBuilder(x.lab8_avro.Clickinfo other) {
    return new x.lab8_avro.Clickinfo.Builder(other);
  }

  /**
   * RecordBuilder for Clickinfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Clickinfo>
    implements org.apache.avro.data.RecordBuilder<Clickinfo> {

    private long timestamp;
    private java.lang.CharSequence session;
    private java.lang.CharSequence domain;
    private java.lang.CharSequence user;
    private long cost;
    private java.lang.CharSequence campaign;
    private java.lang.CharSequence ip;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(x.lab8_avro.Clickinfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.session)) {
        this.session = data().deepCopy(fields()[1].schema(), other.session);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.domain)) {
        this.domain = data().deepCopy(fields()[2].schema(), other.domain);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.user)) {
        this.user = data().deepCopy(fields()[3].schema(), other.user);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.cost)) {
        this.cost = data().deepCopy(fields()[4].schema(), other.cost);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.campaign)) {
        this.campaign = data().deepCopy(fields()[5].schema(), other.campaign);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ip)) {
        this.ip = data().deepCopy(fields()[6].schema(), other.ip);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Clickinfo instance
     * @param other The existing instance to copy.
     */
    private Builder(x.lab8_avro.Clickinfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.session)) {
        this.session = data().deepCopy(fields()[1].schema(), other.session);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.domain)) {
        this.domain = data().deepCopy(fields()[2].schema(), other.domain);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.user)) {
        this.user = data().deepCopy(fields()[3].schema(), other.user);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.cost)) {
        this.cost = data().deepCopy(fields()[4].schema(), other.cost);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.campaign)) {
        this.campaign = data().deepCopy(fields()[5].schema(), other.campaign);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ip)) {
        this.ip = data().deepCopy(fields()[6].schema(), other.ip);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder setTimestamp(long value) {
      validate(fields()[0], value);
      this.timestamp = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder clearTimestamp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'session' field.
      * @return The value.
      */
    public java.lang.CharSequence getSession() {
      return session;
    }

    /**
      * Sets the value of the 'session' field.
      * @param value The value of 'session'.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder setSession(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.session = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'session' field has been set.
      * @return True if the 'session' field has been set, false otherwise.
      */
    public boolean hasSession() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'session' field.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder clearSession() {
      session = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'domain' field.
      * @return The value.
      */
    public java.lang.CharSequence getDomain() {
      return domain;
    }

    /**
      * Sets the value of the 'domain' field.
      * @param value The value of 'domain'.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder setDomain(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.domain = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'domain' field has been set.
      * @return True if the 'domain' field has been set, false otherwise.
      */
    public boolean hasDomain() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'domain' field.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder clearDomain() {
      domain = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'user' field.
      * @return The value.
      */
    public java.lang.CharSequence getUser() {
      return user;
    }

    /**
      * Sets the value of the 'user' field.
      * @param value The value of 'user'.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder setUser(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.user = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'user' field has been set.
      * @return True if the 'user' field has been set, false otherwise.
      */
    public boolean hasUser() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'user' field.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder clearUser() {
      user = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'cost' field.
      * @return The value.
      */
    public java.lang.Long getCost() {
      return cost;
    }

    /**
      * Sets the value of the 'cost' field.
      * @param value The value of 'cost'.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder setCost(long value) {
      validate(fields()[4], value);
      this.cost = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'cost' field has been set.
      * @return True if the 'cost' field has been set, false otherwise.
      */
    public boolean hasCost() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'cost' field.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder clearCost() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'campaign' field.
      * @return The value.
      */
    public java.lang.CharSequence getCampaign() {
      return campaign;
    }

    /**
      * Sets the value of the 'campaign' field.
      * @param value The value of 'campaign'.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder setCampaign(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.campaign = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'campaign' field has been set.
      * @return True if the 'campaign' field has been set, false otherwise.
      */
    public boolean hasCampaign() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'campaign' field.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder clearCampaign() {
      campaign = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'ip' field.
      * @return The value.
      */
    public java.lang.CharSequence getIp() {
      return ip;
    }

    /**
      * Sets the value of the 'ip' field.
      * @param value The value of 'ip'.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder setIp(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.ip = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'ip' field has been set.
      * @return True if the 'ip' field has been set, false otherwise.
      */
    public boolean hasIp() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'ip' field.
      * @return This builder.
      */
    public x.lab8_avro.Clickinfo.Builder clearIp() {
      ip = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Clickinfo build() {
      try {
        Clickinfo record = new Clickinfo();
        record.timestamp = fieldSetFlags()[0] ? this.timestamp : (java.lang.Long) defaultValue(fields()[0]);
        record.session = fieldSetFlags()[1] ? this.session : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.domain = fieldSetFlags()[2] ? this.domain : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.user = fieldSetFlags()[3] ? this.user : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.cost = fieldSetFlags()[4] ? this.cost : (java.lang.Long) defaultValue(fields()[4]);
        record.campaign = fieldSetFlags()[5] ? this.campaign : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.ip = fieldSetFlags()[6] ? this.ip : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Clickinfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<Clickinfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Clickinfo>
    READER$ = (org.apache.avro.io.DatumReader<Clickinfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
